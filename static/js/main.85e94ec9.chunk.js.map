{"version":3,"sources":["utils/theme.js","services/wallet.js","utils/currency.js","models/wallet.js","plugins/loading.js","store.js","components/ActionButton/styled.js","components/ActionButton/index.js","containers/Wallet/styled.js","containers/Wallet/WalletSlide/styled.js","containers/Wallet/WalletSlide/index.js","containers/Wallet/index.js","services/rate.js","utils/useRates.js","containers/Exchange/styled.js","components/CurrencyInput/styled.js","components/CurrencyInput/index.js","containers/Exchange/ExchangeSlide/styled.js","containers/Exchange/ExchangeSlide/index.js","containers/Exchange/index.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","normalize","colors","primary","primaryActive","white","light","MOCK_BALANCE","GBP","EUR","USD","getBalance","userId","a","exchange","fromCode","toCode","fromAmount","toAmount","currencies","code","symbol","description","currencyCodes","Object","keys","getCodeIndex","indexOf","getCodeSymbol","currency","trimNumber","value","digits","Number","toFixed","formatMoney","formatRate","base","rates","rate","state","Immutable","from","showExchange","currentCode","balance","reducers","payload","merge","hideExchange","setCurrentCode","updateBalance","effects","loadBalance","wallet","this","createLoadingAction","toggle","name","action","createErrorAction","failed","error","store","init","redux","devtoolOptions","disabled","process","actionSanitizer","type","startsWith","replace","models","plugins","config","loading","start","success","fail","onModel","modelActions","dispatch","forEach","isEffect","actionType","whitelist","includes","blacklist","origEffect","effectWrapper","meta","args","effectResult","ignore","__CANCEL__","window","newrelic","noticeError","throwlist","createLoadingPlugin","Wrapper","styled","div","props","width","Circle","size","theme","Svg","svg","Label","label","ActionButton","forwardRef","ref","children","icon","iconSize","rest","as","displayName","propTypes","PropTypes","string","elementType","isRequired","number","ActionBar","Loader","Description","Balance","Item","WalletSlide","onChange","handleChange","useCallback","idx","wrapAround","slideIndex","cellAlign","transitionMode","slideWidth","zoomScale","afterSlide","renderCenterLeftControls","renderCenterRightControls","map","key","Exchange","useSelector","useDispatch","useEffect","Plus","RefreshCw","onClick","ArrowRight","CancelToken","axios","source","cancelGetRates","cancel","getRates","symbols","get","params","app_id","cancelToken","token","response","data","useRates","initial","useRef","useState","setData","interval","current","callback","setInterval","clearInterval","prop","style","Header","HeaderLeft","HeaderRight","Button","button","css","RateDropdown","Input","input","normalizeValue","toString","CurrencyInput","_value","maxValue","prefix","prevValue","setValue","e","target","test","isValidInput","undefined","handleBlur","length","substr","onBlur","variants","variant","to","Code","Text","ExchangeSlide","direction","baseCode","targetCode","onFocus","onCodeChange","isSource","dragging","isCurrent","active","autoFocus","setFromCode","nextIdx","getNextCode","setToCode","setDirection","amount","setAmount","maxFromAmount","maxToAmount","hideRate","exchangeDisabled","handleFromCodeChange","handleToCodeChange","handleFromFocus","handleToFocus","handleExchange","Router","Wallet","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85e94ec9.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nexport const variant = (prop, variants) => props => variants[props[prop]];\nexport const boolean = (prop, style) => props => props[prop] && style;\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize};\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n  \n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .slider {\n    .paging-dot circle {\n      fill: white !important;\n    }\n\n    .slider-list {\n      margin: 0 !important;\n    }\n  }\n`;\n\nexport const colors = {\n  primary: '#3b7afa',\n  primaryActive: '#1c4eb3',\n  white: '#fff',\n  light: 'rgba(255,255,255,0.6)',\n};\n\nexport default {\n  colors,\n};\n","const MOCK_BALANCE = {\n  GBP: 100,\n  EUR: 50,\n  USD: 0,\n};\n\nexport const getBalance = async userId => {\n  return MOCK_BALANCE;\n};\n\nexport const exchange = async ({ fromCode, toCode, fromAmount, toAmount }) => {\n  MOCK_BALANCE[fromCode] -= fromAmount;\n  MOCK_BALANCE[toCode] += toAmount;\n\n  return MOCK_BALANCE;\n};\n","export const currencies = {\n  GBP: {\n    code: 'GBP',\n    symbol: '£',\n    description: 'British Pound',\n  },\n  EUR: {\n    code: 'EUR',\n    symbol: '€',\n    description: 'Euro',\n  },\n  USD: {\n    code: 'USD',\n    symbol: '$',\n    description: 'American Dollar',\n  },\n};\n\nexport const currencyCodes = Object.keys(currencies);\n\nexport const getCodeIndex = code => currencyCodes.indexOf(code);\n\nexport const getNextCode = code => {\n  const idx = getCodeIndex(code);\n  let nextIdx = idx + 1;\n  if (nextIdx >= currencyCodes.length) nextIdx = 0;\n\n  return currencyCodes[nextIdx];\n};\n\nexport const getCodeSymbol = code => {\n  const currency = currencies[code];\n  return currency ? currency.symbol : '';\n};\n\n// trim trailing zeros\nexport const trimNumber = (value, digits = 2) => Number(value.toFixed(digits));\n\nexport const formatMoney = (code, value) => {\n  return `${getCodeSymbol(code)}${trimNumber(value)}`;\n};\n\nexport const formatRate = (base, code, rates) => {\n  if (!rates || !rates[code] || !rates[code]) return '';\n\n  const rate = rates[code] / rates[base];\n  return `${getCodeSymbol(base)}1 = ${getCodeSymbol(code)}${trimNumber(\n    rate,\n    4\n  )}`;\n};\n","import Immutable from 'seamless-immutable';\n\nimport { getBalance, exchange } from 'services/wallet';\nimport { currencyCodes } from 'utils/currency';\n\nexport default {\n  state: Immutable.from({\n    showExchange: false,\n    currentCode: currencyCodes[0],\n    balance: null,\n  }),\n  reducers: {\n    showExchange(state, payload) {\n      return state.merge({ showExchange: true });\n    },\n    hideExchange(state, payload) {\n      return state.merge({ showExchange: false });\n    },\n    setCurrentCode(state, currentCode) {\n      return state.merge({ currentCode });\n    },\n    updateBalance(state, balance) {\n      return state.merge({ balance });\n    },\n  },\n  effects: {\n    async loadBalance(payload, { wallet }) {\n      const balance = await getBalance();\n\n      this.updateBalance(balance);\n    },\n    async exchange(payload, { wallet }) {\n      const balance = await exchange(payload);\n\n      this.updateBalance(balance);\n      this.hideExchange();\n    },\n  },\n};\n","const createLoadingAction = toggle => (state, { name, action }) => {\n  return {\n    ...state,\n    [name]: {\n      ...state[name],\n      [action]: toggle,\n    },\n  };\n};\n\nconst createErrorAction = failed => (state, { name, action, error }) => {\n  return {\n    ...state,\n    [name]: {\n      ...state[name],\n      [action]: failed ? error : null,\n    },\n  };\n};\n\nexport default (config = {}) => {\n  const loading = {\n    name: 'loading',\n    reducers: {\n      start: createLoadingAction(true),\n      success: createLoadingAction(false),\n      fail: createLoadingAction(false),\n    },\n    state: {},\n  };\n\n  const error = {\n    name: 'error',\n    reducers: {\n      'loading/start': createErrorAction(false),\n      'loading/success': createErrorAction(false),\n      'loading/fail': createErrorAction(true),\n    },\n    state: {},\n  };\n\n  return {\n    config: {\n      models: {\n        loading,\n        error,\n      },\n    },\n    onModel({ name }) {\n      // do not run dispatch on 'loading' and 'error' model\n      if (name === 'loading' || name === 'error') return;\n\n      loading.state[name] = {};\n      error.state[name] = {};\n      const modelActions = this.dispatch[name];\n\n      Object.keys(modelActions).forEach(action => {\n        if (!this.dispatch[name][action].isEffect) return;\n\n        loading.state[name][action] = false;\n        error.state[name][action] = null;\n        const actionType = `${name}/${action}`;\n        // ignore items not in whitelist\n        if (config.whitelist && !config.whitelist.includes(actionType)) return;\n        // ignore items in blacklist\n        if (config.blacklist && config.blacklist.includes(actionType)) return;\n\n        const origEffect = this.dispatch[name][action];\n        const effectWrapper = async (payload, meta, ...args) => {\n          try {\n            this.dispatch.loading.start({ name, action });\n            const effectResult = await origEffect(payload, meta, ...args);\n            this.dispatch.loading.success({ name, action });\n            return effectResult;\n          } catch (err) {\n            if (err.ignore) return null;\n\n            this.dispatch.loading.fail({\n              name,\n              action,\n              error: err,\n              meta,\n            });\n\n            if (err.__CANCEL__) return null;\n            if (window.newrelic) window.newrelic.noticeError(error);\n            if (process.env.NODE_ENV !== 'production') console.error(err);\n            if (config.throwlist && config.throwlist.includes(actionType))\n              throw err;\n            return null;\n          }\n        };\n        effectWrapper.isEffect = true;\n        this.dispatch[name][action] = effectWrapper;\n      });\n    },\n  };\n};\n","import { init } from '@rematch/core';\n\nimport * as models from 'models';\nimport createLoadingPlugin from 'plugins/loading';\n\nconst store = init({\n  redux: {\n    devtoolOptions: {\n      name: 'Exchange Demo',\n      disabled: process.env.NODE_ENV === 'production',\n      actionSanitizer: action => {\n        if (!action.type.startsWith('loading/')) return action;\n\n        // replace display action type for debug\n        const type = action.type.replace(\n          'loading/',\n          `${action.payload.name}/${action.payload.action}@`\n        );\n        return { ...action, type };\n      },\n    },\n  },\n  models,\n  plugins: [createLoadingPlugin()],\n});\n\nexport default store;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: ${props => props.width}px;\n`;\n\nexport const Circle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #2e6cdd;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  border-radius: 50%;\n  border: 1px solid ${props => props.theme.colors.light};\n`;\n\nexport const Svg = styled.svg`\n  color: ${props => props.theme.colors.white};\n`;\n\nexport const Label = styled.label`\n  color: ${props => props.theme.colors.light};\n  font-size: 14px;\n  margin-top: 10px;\n`;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Wrapper, Circle, Svg, Label } from './styled';\n\nconst ActionButton = forwardRef(\n  ({ children, icon, iconSize = 48, ...rest }, ref) => (\n    <Wrapper width={iconSize} {...rest} ref={ref}>\n      <Circle size={iconSize}>\n        <Svg as={icon} />\n      </Circle>\n      {children && <Label>{children}</Label>}\n    </Wrapper>\n  )\n);\n\nActionButton.displayName = 'ActionButton';\nActionButton.propTypes = {\n  children: PropTypes.string,\n  icon: PropTypes.elementType.isRequired,\n  iconSize: PropTypes.number,\n};\n\nexport default ActionButton;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: ${props => props.theme.colors.primary};\n`;\n\nexport const ActionBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  padding: 20px;\n`;\n\nexport const Loader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.theme.colors.primary};\n  color: ${props => props.theme.colors.white};\n  font-size: 16px;\n  width: 100vw;\n  height: 100vh;\n`;\n","import styled from 'styled-components';\n\nexport const Description = styled.div`\n  color: ${props => props.theme.colors.light};\n  font-size: 16px;\n`;\n\nexport const Wrapper = styled.div`\n  height: 300px;\n\n  li {\n    :not(.slide-current) {\n      ${Description} {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const Balance = styled.div`\n  color: ${props => props.theme.colors.white};\n  font-size: 32px;\n  margin: 30px;\n`;\n\nexport const Item = styled.div`\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-end;\n`;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Carousel from 'nuka-carousel';\n\nimport {\n  currencies,\n  currencyCodes,\n  getCodeIndex,\n  formatMoney,\n} from 'utils/currency';\nimport { Wrapper, Item, Balance, Description } from './styled';\n\nconst WalletSlide = ({\n  currentCode = currencyCodes[0],\n  balance,\n  onChange,\n  ...rest\n}) => {\n  const handleChange = useCallback(\n    idx => {\n      onChange && onChange(currencyCodes[idx]);\n    },\n    [onChange]\n  );\n\n  return (\n    <Wrapper {...rest}>\n      <Carousel\n        wrapAround\n        slideIndex={getCodeIndex(currentCode)}\n        cellAlign=\"center\"\n        transitionMode=\"scroll3d\"\n        slideWidth={0.6}\n        zoomScale={0.6}\n        afterSlide={handleChange}\n        renderCenterLeftControls={null}\n        renderCenterRightControls={null}\n      >\n        {currencyCodes.map(code => (\n          <Item key={code}>\n            <Balance>{formatMoney(code, balance[code])}</Balance>\n            <Description>\n              {code} - {currencies[code].description}\n            </Description>\n          </Item>\n        ))}\n      </Carousel>\n    </Wrapper>\n  );\n};\n\nWalletSlide.propTypes = {\n  currentCode: PropTypes.string,\n  balance: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default WalletSlide;\n","import React, { useEffect } from 'react';\nimport ActionButton from 'components/ActionButton';\nimport { Plus, RefreshCw, ArrowRight } from 'react-feather';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Wrapper, ActionBar, Loader } from './styled';\nimport WalletSlide from './WalletSlide';\n\nconst Exchange = ({ showExchange, ...rest }) => {\n  const [currentCode, balance, loading, error] = useSelector(state => [\n    state.wallet.currentCode,\n    state.wallet.balance,\n    state.loading.wallet.loadBalance,\n    state.error.wallet.loadBalance,\n  ]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch.wallet.loadBalance();\n  }, [dispatch]);\n\n  if (error) {\n    return <Loader>Load balance failed</Loader>;\n  }\n  if (!balance || loading) {\n    return <Loader>Loading</Loader>;\n  }\n\n  return (\n    <Wrapper>\n      <WalletSlide\n        balance={balance}\n        currentCode={currentCode}\n        onChange={dispatch.wallet.setCurrentCode}\n      />\n      <ActionBar>\n        <ActionButton icon={Plus}>Top Up</ActionButton>\n        <ActionButton icon={RefreshCw} onClick={dispatch.wallet.showExchange}>\n          Exchange\n        </ActionButton>\n        <ActionButton icon={ArrowRight}>Bank</ActionButton>\n      </ActionBar>\n    </Wrapper>\n  );\n};\n\nexport default Exchange;\n","import axios from 'axios';\n\nconst CancelToken = axios.CancelToken;\nlet source = CancelToken.source();\n\nexport const cancelGetRates = (...args) => {\n  source.cancel(...args);\n  source = CancelToken.source();\n};\n\nexport const getRates = async (symbols = 'GBP,EUR,USD') => {\n  const response = await axios.get(\n    'https://openexchangerates.org/api/latest.json',\n    {\n      params: {\n        app_id: '9356d23d12ab4998b467db1492e3fec7',\n        symbols,\n      },\n      cancelToken: source.token,\n    }\n  );\n\n  return response.data.rates;\n};\n","import { useRef, useState, useEffect } from 'react';\n\nimport { getRates, cancelGetRates } from 'services/rate';\n\nconst TIMEOUT = 10 * 1000;\n\nconst useRates = () => {\n  const initial = useRef(true);\n  const [data, setData] = useState({\n    loading: true,\n    rates: null,\n    error: null,\n  });\n\n  useEffect(() => {\n    let interval;\n    if (initial.current) {\n      const callback = async () => {\n        // cancel pending request\n        cancelGetRates();\n        try {\n          const rates = await getRates();\n          // TODO: we could avoid triggering re-render if rates stays the same\n          setData({\n            loading: false,\n            rates,\n            error: null,\n          });\n        } catch (error) {\n          setData({\n            loading: false,\n            rates: null,\n            error,\n          });\n\n          // TODO: if failed to fetch rates, retry immediately\n          // clearInterval(interval);\n          // interval = setInterval(callback, TIMEOUT);\n          // callback();\n        }\n      };\n\n      interval = setInterval(callback, TIMEOUT);\n      callback();\n      initial.current = false;\n    }\n\n    return () => clearInterval(interval);\n  }, [setData]);\n\n  return data;\n};\n\nexport default useRates;\n","import styled, { css } from 'styled-components';\n\nimport { boolean } from 'utils/theme';\n\nexport const Wrapper = styled.div`\n  background-color: ${props => props.theme.colors.primary};\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const Header = styled.div`\n  background-color: ${props => props.theme.colors.primary};\n  height: 70px;\n  padding: 30px 0 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const HeaderLeft = styled.div`\n  flex: 1;\n`;\n\nexport const HeaderRight = styled.div`\n  flex: 1;\n  text-align: right;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background-color: transparent;\n  color: ${props => props.theme.colors.white};\n  padding: 5px 10px;\n\n  ${boolean(\n    'disabled',\n    css`\n      color: ${props => props.theme.colors.light};\n    `\n  )}\n`;\n\nexport const RateDropdown = styled.button`\n  background-color: ${props => props.theme.colors.primaryActive};\n  color: ${props => props.theme.colors.white};\n  border: 1px solid ${props => props.theme.colors.light};\n  border-radius: 5px;\n  padding: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  background-color: transparent;\n  color: ${props => props.theme.colors.white};\n  border: none;\n  outline: none;\n  text-align: right;\n`;\n","import React, {\n  forwardRef,\n  useRef,\n  useState,\n  useCallback,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from './styled';\n\nconst isValidInput = input => input === '' || /^\\d+\\.?\\d{0,2}$/.test(input);\nconst normalizeValue = value => (value ? value.toString() : '');\n\nconst CurrencyInput = forwardRef(\n  ({ value: _value, maxValue, prefix = '', onChange, ...rest }, ref) => {\n    const prevValue = useRef(_value);\n    const [value, setValue] = useState(normalizeValue(_value));\n    const handleChange = useCallback(\n      e => {\n        const input = e.target.value.replace(prefix, '');\n\n        if (isValidInput(input)) {\n          const value = Number(input);\n          if (maxValue !== undefined && value > maxValue) return;\n\n          setValue(input);\n          onChange && onChange(Number(value));\n        }\n      },\n      [prefix, maxValue, setValue, onChange]\n    );\n\n    const handleBlur = useCallback(() => {\n      if (Number(value) === 0) {\n        setValue('');\n      } else if (value[value.length - 1] === '.') {\n        setValue(value.substr(0, value.length - 1));\n      }\n    }, [value]);\n\n    useEffect(() => {\n      if (prevValue.current !== _value) {\n        setValue(normalizeValue(_value));\n        prevValue.current = _value;\n      }\n    }, [prevValue, _value]);\n\n    return (\n      <Input\n        {...rest}\n        ref={ref}\n        value={value === '' ? '' : `${prefix}${value}`}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n    );\n  }\n);\n\nCurrencyInput.displayName = 'CurrencyInput';\nCurrencyInput.propTypes = {\n  value: PropTypes.number,\n  maxValue: PropTypes.number,\n  prefix: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default CurrencyInput;\n","import styled, { css } from 'styled-components';\n\nimport CurrencyInput from 'components/CurrencyInput';\nimport { variant } from 'utils/theme';\n\nexport const Wrapper = styled.div`\n  height: 200px;\n\n  ${variant('direction', {\n    from: css`\n      background-color: ${props => props.theme.colors.primary};\n      position: relative;\n\n      &::after {\n        position: absolute;\n        left: 50%;\n        bottom: 0;\n        content: '';\n        display: block;\n        width: 0;\n        height: 0;\n        border-style: solid;\n        border-width: 16px 16px 0;\n        border-color: ${props => props.theme.colors.primary} transparent\n          transparent;\n        transform: translateX(-50%) translateY(100%);\n      }\n    `,\n    to: css`\n      background-color: #1c4eb3;\n    `,\n  })}\n`;\n\nexport const Item = styled.div`\n  padding: 30px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 80px;\n`;\n\nexport const Code = styled.div`\n  width: 40%;\n  color: ${props => props.theme.colors.white};\n  font-size: 36px;\n  padding-right: 10px;\n`;\n\nexport const Input = styled(CurrencyInput)`\n  width: 60%;\n  color: ${props => props.theme.colors.white};\n  font-size: 36px;\n`;\n\nexport const Balance = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: transparent;\n  padding: 10px 0;\n`;\n\nexport const Text = styled.div`\n  color: ${props => props.theme.colors.light};\n  font-size: 16px;\n`;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Carousel from 'nuka-carousel';\n\nimport {\n  currencyCodes,\n  getCodeIndex,\n  formatMoney,\n  formatRate,\n} from 'utils/currency';\nimport { Wrapper, Item, Label, Code, Input, Balance, Text } from './styled';\n\nconst ExchangeSlide = ({\n  direction = 'from',\n  balance,\n  rates,\n  baseCode,\n  targetCode,\n  value,\n  maxValue,\n  disabled,\n  onFocus,\n  onChange,\n  onCodeChange,\n  ...rest\n}) => {\n  const handleChange = useCallback(\n    idx => {\n      onCodeChange && onCodeChange(currencyCodes[idx]);\n    },\n    [onCodeChange]\n  );\n\n  const isSource = direction === 'from';\n  const slideIndex = getCodeIndex(baseCode);\n  return (\n    <Wrapper direction={direction} {...rest}>\n      <Carousel\n        wrapAround\n        dragging={false}\n        slideIndex={slideIndex}\n        afterSlide={handleChange}\n        renderCenterLeftControls={null}\n        renderCenterRightControls={null}\n      >\n        {currencyCodes.map(code => {\n          const isCurrent = code === baseCode;\n\n          return (\n            <Item key={code} active={isCurrent}>\n              <Label>\n                <Code>{code}</Code>\n                {isCurrent && !disabled && (\n                  <Input\n                    autoFocus={isSource && isCurrent}\n                    value={value}\n                    maxValue={maxValue}\n                    prefix={isSource ? '-' : '+'}\n                    onChange={onChange}\n                    onFocus={onFocus}\n                  />\n                )}\n              </Label>\n              <Balance>\n                <Text>You have {formatMoney(code, balance[code])}</Text>\n                {!isSource && baseCode !== targetCode && (\n                  <Text>{formatRate(code, targetCode, rates)}</Text>\n                )}\n              </Balance>\n            </Item>\n          );\n        })}\n      </Carousel>\n    </Wrapper>\n  );\n};\n\nExchangeSlide.propTypes = {\n  direction: PropTypes.oneOf(['from', 'to']),\n  balance: PropTypes.object,\n  rates: PropTypes.object,\n  baseCode: PropTypes.string.isRequired,\n  targetCode: PropTypes.string.isRequired,\n  value: PropTypes.number,\n  maxValue: PropTypes.number,\n  onFocus: PropTypes.func,\n  onChange: PropTypes.func,\n  onCodeChange: PropTypes.func,\n};\n\nexport default ExchangeSlide;\n","import React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getNextCode, formatRate, trimNumber } from 'utils/currency';\nimport useRates from 'utils/useRates';\n\nimport {\n  Wrapper,\n  Header,\n  Button,\n  RateDropdown,\n  HeaderLeft,\n  HeaderRight,\n} from './styled';\nimport ExchangeSlide from './ExchangeSlide';\n\nconst Exchange = () => {\n  const [currentCode, balance] = useSelector(state => [\n    state.wallet.currentCode,\n    state.wallet.balance,\n  ]);\n  const [fromCode, setFromCode] = useState(currentCode);\n  const [toCode, setToCode] = useState(getNextCode(currentCode));\n  const [direction, setDirection] = useState('from');\n  const [amount, setAmount] = useState(0);\n  const { rates, loading, error } = useRates();\n  const dispatch = useDispatch();\n\n  const rate = rates ? rates[toCode] / rates[fromCode] : 1;\n  const maxFromAmount = balance[fromCode];\n  const maxToAmount = rates ? maxFromAmount * rate : 0;\n  const fromAmount = direction === 'from' ? amount : trimNumber(amount / rate);\n  const toAmount = direction === 'to' ? amount : trimNumber(amount * rate);\n\n  const hideRate = !rates || loading || error || fromCode === toCode;\n  const exchangeDisabled = hideRate || fromAmount === 0 || fromAmount > maxFromAmount;\n\n  const handleFromCodeChange = useCallback(\n    code => {\n      setFromCode(code);\n      setAmount(0);\n    },\n    [setFromCode, setAmount]\n  );\n\n  const handleToCodeChange = useCallback(\n    code => {\n      setToCode(code);\n      setAmount(0);\n    },\n    [setToCode, setAmount]\n  );\n\n  const handleFromFocus = useCallback(() => {\n    if (direction === 'to') {\n      setDirection('from');\n      setAmount(fromAmount);\n    }\n  }, [direction, setDirection, setAmount, fromAmount]);\n\n  const handleToFocus = useCallback(() => {\n    if (direction === 'from') {\n      setDirection('to');\n      setAmount(toAmount);\n    }\n  }, [direction, setDirection, setAmount, toAmount]);\n\n  const handleExchange = useCallback(() => {\n    dispatch.wallet.exchange({ fromCode, fromAmount, toCode, toAmount });\n  }, [dispatch, fromCode, fromAmount, toCode, toAmount]);\n\n  return (\n    <Wrapper>\n      <Header>\n        <HeaderLeft>\n          <Button onClick={dispatch.wallet.hideExchange}>Cancel</Button>\n        </HeaderLeft>\n        {!hideRate && (\n          <RateDropdown>{formatRate(fromCode, toCode, rates)}</RateDropdown>\n        )}\n        <HeaderRight>\n          <Button disabled={exchangeDisabled} onClick={handleExchange}>\n            Exchange\n          </Button>\n        </HeaderRight>\n      </Header>\n      <ExchangeSlide\n        direction=\"from\"\n        balance={balance}\n        rates={rates}\n        baseCode={fromCode}\n        targetCode={toCode}\n        value={fromAmount}\n        maxValue={maxFromAmount}\n        disabled={hideRate}\n        onFocus={handleFromFocus}\n        onChange={setAmount}\n        onCodeChange={handleFromCodeChange}\n      />\n      <ExchangeSlide\n        direction=\"to\"\n        balance={balance}\n        rates={rates}\n        baseCode={toCode}\n        targetCode={fromCode}\n        value={toAmount}\n        maxValue={maxToAmount}\n        disabled={hideRate}\n        onFocus={handleToFocus}\n        onChange={setAmount}\n        onCodeChange={handleToCodeChange}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Exchange;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Wallet from 'containers/Wallet';\nimport Exchange from 'containers/Exchange';\n\nconst Router = () => {\n  const showExchange = useSelector(state => state.wallet.showExchange);\n\n  return (\n    <>\n      <Wallet />\n      {showExchange && <Exchange />}\n    </>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\n\nimport theme, { GlobalStyle } from 'utils/theme';\nimport store from 'store';\n\nimport Router from './Router';\n\nconst App = () => (\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Router />\n    </ThemeProvider>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}